# Generated by Django 2.0.3 on 2018-04-04 08:47

import dispatch.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='undefined', max_length=500, verbose_name='subject')),
                ('content', models.TextField(default='Content', verbose_name='content')),
                ('accepted', models.BooleanField(default=True, help_text='True to accepted, False to rejected', verbose_name='accepted')),
                ('status', models.BooleanField(default=True, help_text='True to active, False to closed', verbose_name='status')),
                ('grade', models.IntegerField(choices=[('0', '待评分'), ('1', '驳回'), ('55', 'C'), ('65', 'B'), ('75', 'A'), ('85', 'A+'), ('95', 'A++')], default=0)),
                ('suggestions', models.TextField(blank=True, verbose_name='suggestions')),
                ('file', models.FileField(blank=True, upload_to=dispatch.models.user_directory_path, verbose_name='file')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
            ],
            options={
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseID', models.IntegerField(default=0, primary_key=True, serialize=False, unique=True, verbose_name='课程')),
                ('course', models.CharField(max_length=255, verbose_name='课程名')),
                ('intro', models.TextField(verbose_name='introduction')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_time')),
                ('student', models.ManyToManyField(related_name='Course_student', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete='teacher', related_name='Course_teacher', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'created_at',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('questionID', models.CharField(default=0, max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='questionID')),
                ('user_id', models.IntegerField(default=1, verbose_name='userID')),
                ('subject', models.CharField(default='undefined', max_length=500, verbose_name='subject')),
                ('content', models.TextField(default='Content', verbose_name='content')),
                ('ddl', models.DateField(max_length=255, verbose_name='deadline')),
                ('status', models.BooleanField(default=True, help_text='True to ongoing, False to closed', verbose_name='status')),
                ('file', models.FileField(blank=True, upload_to=dispatch.models.user_directory_path, verbose_name='file')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created_time')),
                ('courseID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Question_courseID', to='dispatch.Course')),
            ],
            options={
                'get_latest_by': 'created_at',
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='questionID',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Answer_questionID', to='dispatch.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Answer_owner', to=settings.AUTH_USER_MODEL),
        ),
    ]
